{"version":3,"sources":["auth/index.jsx","components/Routines.jsx","api/index.jsx","components/CreateRoutine.jsx","components/UpdateRoutine.jsx","components/ConfirmDelete.jsx","components/AddActivity.jsx","components/MyRoutines.jsx","components/Activities.jsx","components/Login.jsx","components/Register.jsx","components/Header.jsx","index.jsx"],"names":["storeCurrentUser","user","localStorage","setItem","JSON","stringify","Routines","routines","className","length","map","id","name","goal","creatorName","activities","description","duration","count","BASE_URL","registerUser","username","password","a","fetch","method","headers","body","response","json","data","token","loginUser","getPublicRoutinesByUser","getActivities","getAllPublicRoutines","createNewRoutine","isPublic","parse","getItem","replace","Authorization","updateRoutine","routineId","deleteRoutine","addActivityToRoutine","activityId","CreateRoutine","handleClose","setMyRoutinesList","myRoutinesList","useState","creationMessage","setCreationMessage","newRoutineName","setNewRoutineName","newRoutineGoal","setNewRoutineGoal","setIsPublic","messageDiv","e","preventDefault","result","push","Form","onSubmit","onClick","Group","size","controlId","Label","Control","autoFocus","type","onChange","target","value","Check","label","checked","Button","block","disabled","UpdateRoutine","updateMessage","setUpdateMessage","updatedRoutineName","setUpdatedRoutineName","updatedRoutineGoal","setUpdatedRoutineGoal","ConfirmDelete","deletionMessage","setDeletionMessage","confirmDelete","setConfirmDelete","reset","AddActivity","activitiesList","setActivityId","console","error","for","activity","MyRoutines","currentUser","showCreateRoutine","setShowCreateRoutine","showUpdateRoutine","setShowUpdateRoutine","showConfirmDelete","setShowConfirmDelete","showAddActivity","setShowAddActivity","toggleShowCreateRoutine","toggleShowUpdateRoutine","toggleConfirmDelete","toggleShowActivity","variant","Activities","Login","setCurrentUser","setUsername","setPassword","loginMessage","setLoginMessage","event","handleLogin","message","Register","registerMessage","setRegisterMessage","Header","showLogin","setShowLogin","showRegister","setShowRegister","toggleShowLogin","toggleShowRegister","to","activeClassName","removeItem","App","publicRoutines","setPublicRoutines","setActivities","useEffect","then","catch","log","path","exact","style","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0a14c59.chunk.js","sourcesContent":["export function storeCurrentUser(user) {\r\n  localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  return user;\r\n}\r\n\r\nexport function clearCurrentUser() {\r\n  localStorage.removeItem(\"currentUser\");\r\n}\r\n","import React from \"react\";\r\nimport \"./Routines.css\";\r\n\r\nconst Routines = ({ routines }) => {\r\n  return (\r\n    <div className=\"Routines\">\r\n      <h2>Here are all public routines with their activities</h2>\r\n      <p>There is a total of {routines.length} public routines.</p>\r\n\r\n      {routines.map(({ id, name, goal, creatorName, activities }) => (\r\n        <div key={id} className=\"post\">\r\n          <h3>Routine Name: {name}</h3>\r\n          <p>Routine Goal: {goal}</p>\r\n          <p>Creator Name: {creatorName}</p>\r\n\r\n          {activities.map(({ id, name, description, duration, count }) => (\r\n            <div key={id} className=\"activities\">\r\n              <h3>Routine Activity: {name}</h3>\r\n              <p>Activity Description: {description}</p>\r\n              <p>Duration: {duration}</p>\r\n              <p>Count: {count}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routines;\r\n","export const BASE_URL = \"https://fitnesstrackr-ay.herokuapp.com/api\";\r\n\r\n//POST  /users/register\r\nexport const registerUser = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/users/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    localStorage.setItem(\"token\", JSON.stringify(data.token));\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//GET /users/login\r\nexport const loginUser = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    localStorage.setItem(\"token\", JSON.stringify(data.token));\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//GET /routines\r\nexport const getRoutines = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/routines`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//GET /:username/routines\r\nexport const getPublicRoutinesByUser = async (username) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/users/${username}/routines`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//GET /activities\r\nexport const getActivities = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/activities`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//POST /activities\r\nexport const createActivity = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n    const response = await fetch(`${BASE_URL}/activities`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        description: description,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//PATCH /:activityId\r\nexport const updateActivity = async (activityID, name, description) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n    const response = await fetch(`${BASE_URL}/activities/${activityID}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        description: description,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//GET /:activityId/routines\r\nexport const getPublicRoutinesByActivity = async (activityID) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/activities/${activityID}/routines`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//GET /routines\r\nexport const getAllPublicRoutines = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/routines`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//POST /routines\r\nexport const createNewRoutine = async ({ name, goal, isPublic }) => {\r\n  const token = JSON.parse(localStorage.getItem(\"token\")).replace(/['\"]+/g, \"\");\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/routines`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        goal: goal,\r\n        isPublic: isPublic,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//PATCH /routines/:routineId\r\nexport const updateRoutine = async (routineId, name, goal) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\").replace(/['\"]+/g, \"\");\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const response = await fetch(`${BASE_URL}/routines/${routineId}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        goal: goal,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//DELETE /routines/:routineId\r\nexport const deleteRoutine = async (routineId) => {\r\n  const token = localStorage.getItem(\"token\").replace(/['\"]+/g, \"\");\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/routines/${routineId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// POST /routines/:routineId/activities\r\nexport const addActivityToRoutine = async (\r\n  routineId,\r\n  activityId,\r\n  duration,\r\n  count\r\n) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/routines/${routineId}/activities`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          activityId: activityId,\r\n          duration: duration,\r\n          count: count,\r\n        }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//PATCH /routine_activities/:routineActivityId\r\nexport const updateRoutineActivity = async (\r\n  routineActivityId,\r\n  count,\r\n  duration\r\n) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n    const response = await fetch(\r\n      `${BASE_URL}/routine_activities/${routineActivityId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          count: count,\r\n          duration: duration,\r\n        }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//DELETE /routine_activities/:routineActivityId\r\nexport const deleteRoutineActivity = async (routineActivityId) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n    const response = await fetch(\r\n      `${BASE_URL}/routine_activities/${routineActivityId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./CreateRoutine.css\";\r\nimport { createNewRoutine } from \"../api\";\r\n\r\nconst CreateRoutine = ({ handleClose, setMyRoutinesList, myRoutinesList }) => {\r\n  const [creationMessage, setCreationMessage] = useState(null);\r\n  const [newRoutineName, setNewRoutineName] = useState(\"\");\r\n  const [newRoutineGoal, setNewRoutineGoal] = useState(\"\");\r\n  const [isPublic, setIsPublic] = useState(false);\r\n\r\n  const messageDiv = creationMessage ? (\r\n    <div className=\"message\">{creationMessage}</div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  function validateForm() {\r\n    return newRoutineName.length > 0 && newRoutineGoal.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setCreationMessage(null);\r\n    try {\r\n      const result = await createNewRoutine({\r\n        name: newRoutineName,\r\n        goal: newRoutineGoal,\r\n        isPublic: isPublic,\r\n      });\r\n      myRoutinesList.push(result);\r\n      setMyRoutinesList(myRoutinesList);\r\n      setCreationMessage(\"Routine created successfully!\");\r\n    } catch (error) {\r\n      setCreationMessage(\"Routine creation unsuccessful. Please try again\");\r\n    }\r\n  }\r\n\r\n  function reset() {\r\n    setNewRoutineName(\"\");\r\n    setNewRoutineGoal(\"\");\r\n    setIsPublic(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"CreateRoutine\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <span className=\"close-icon\" onClick={handleClose}>\r\n          {\" \"}\r\n          x{\" \"}\r\n        </span>\r\n        <Form.Group size=\"lg\" controlId=\"routineName\">\r\n          <Form.Label>Routine Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={(e) => setNewRoutineName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"routineGoal\">\r\n          <Form.Label>Routine Goal</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"goal\"\r\n            onChange={(e) => setNewRoutineGoal(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicCheckbox\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            name=\"isPublic\"\r\n            label=\"Routine public\"\r\n            onChange={(e) =>\r\n              e.target.checked ? setIsPublic(true) : setIsPublic(false)\r\n            }\r\n          />\r\n        </Form.Group>\r\n        {messageDiv}\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          CREATE\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoutine;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./UpdateRoutine.css\";\r\nimport { updateRoutine } from \"../api\";\r\n\r\nconst UpdateRoutine = ({\r\n  handleClose,\r\n  setMyRoutinesList,\r\n  myRoutinesList,\r\n  routineId,\r\n  goal,\r\n  name,\r\n}) => {\r\n  const [updateMessage, setUpdateMessage] = useState(null);\r\n  const [updatedRoutineName, setUpdatedRoutineName] = useState(\"\");\r\n  const [updatedRoutineGoal, setUpdatedRoutineGoal] = useState(\"\");\r\n\r\n  const messageDiv = updateMessage ? (\r\n    <div className=\"message\">{updateMessage}</div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  function validateForm() {\r\n    return !updatedRoutineName.length > 0 && !updatedRoutineGoal.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setUpdateMessage(null);\r\n    try {\r\n      const result = await updateRoutine({\r\n        routineId: routineId,\r\n        name: updatedRoutineName,\r\n        goal: updatedRoutineGoal,\r\n      });\r\n      setMyRoutinesList(myRoutinesList);\r\n      setUpdateMessage(\"Routine updated successfully!\");\r\n    } catch (error) {\r\n      setUpdateMessage(\"Routine update unsuccessful. Please try again\");\r\n    }\r\n  }\r\n\r\n  function reset() {\r\n    setUpdatedRoutineName(\"\");\r\n    setUpdatedRoutineGoal(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"UpdateRoutine\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <span className=\"close-icon\" onClick={handleClose}>\r\n          {\" \"}\r\n          x{\" \"}\r\n        </span>\r\n        <Form.Group size=\"lg\" controlId=\"routineName\">\r\n          <Form.Label>Routine Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => setUpdatedRoutineName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"routineGoal\">\r\n          <Form.Label>Routine Goal</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"goal\"\r\n            value={goal}\r\n            onChange={(e) => setUpdatedRoutineGoal(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        {messageDiv}\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          UPDATE\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateRoutine;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./ConfirmDelete.css\";\r\nimport { deleteRoutine } from \"../api\";\r\n\r\nconst ConfirmDelete = ({\r\n  handleClose,\r\n  routineId,\r\n  setMyRoutinesList,\r\n  myRoutinesList,\r\n}) => {\r\n  const [deletionMessage, setDeletionMessage] = useState(null);\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n\r\n  const messageDiv = deletionMessage ? (\r\n    <div className=\"message\">{deletionMessage}</div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  function validateForm() {\r\n    return confirmDelete === true;\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    setDeletionMessage(null);\r\n    try {\r\n      const result = await deleteRoutine(routineId);\r\n      setMyRoutinesList(myRoutinesList);\r\n      setDeletionMessage(\"Routine deleted successfully!\");\r\n    } catch (error) {\r\n      setDeletionMessage(\"Routine deletion unsuccessful. Please try again\");\r\n    } finally {\r\n      e.target.reset();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ConfirmDelete\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <span className=\"close-icon\" onClick={handleClose}>\r\n          {\" \"}\r\n          x{\" \"}\r\n        </span>\r\n        <Form.Group controlId=\"formBasicCheckbox\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            name=\"isPublic\"\r\n            label=\"Confirm Deletion\"\r\n            onChange={(e) =>\r\n              e.target.checked\r\n                ? setConfirmDelete(true)\r\n                : setConfirmDelete(false)\r\n            }\r\n          />\r\n        </Form.Group>\r\n        {messageDiv}\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          CONFIRM DELETION\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDelete;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { addActivityToRoutine } from \"../api\";\r\n\r\nconst AddActivity = ({ routineId, activitiesList }) => {\r\n  const [activityId, setActivityId] = useState(\"\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await addActivityToRoutine(routineId, activityId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function handleChange(e) {\r\n    return setActivityId(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form className=\"addActivity\" id={routineId} onSubmit={handleSubmit}>\r\n      <label for=\"activityOption\">Add an Activity to this Routine:</label>\r\n      <select id=\"activityOption\" name=\"activityOption\" onChange={handleChange}>\r\n        <option value=\"option\">Select an Activity...</option>\r\n        {activitiesList.map((activity) => {\r\n          return <option value={activity.id}>{activity.name}</option>;\r\n        })}\r\n      </select>\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddActivity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { deleteRoutine, updateRoutine, getPublicRoutinesByUser } from \"../api\";\r\nimport CreateRoutine from \"./CreateRoutine\";\r\nimport UpdateRoutine from \"./UpdateRoutine\";\r\nimport ConfirmDelete from \"./ConfirmDelete\";\r\nimport AddActivity from \"./AddActivity\";\r\nimport \"./MyRoutines.css\";\r\n\r\nconst MyRoutines = ({\r\n  currentUser,\r\n  myRoutinesList,\r\n  setMyRoutinesList,\r\n  activitiesList,\r\n}) => {\r\n  const [showCreateRoutine, setShowCreateRoutine] = useState(false);\r\n  const [showUpdateRoutine, setShowUpdateRoutine] = useState(false);\r\n  const [showConfirmDelete, setShowConfirmDelete] = useState(false);\r\n  const [showAddActivity, setShowAddActivity] = useState(false);\r\n\r\n  const toggleShowCreateRoutine = () => {\r\n    setShowCreateRoutine(!showCreateRoutine);\r\n  };\r\n\r\n  const toggleShowUpdateRoutine = () => {\r\n    setShowUpdateRoutine(!showUpdateRoutine);\r\n  };\r\n\r\n  const toggleConfirmDelete = () => {\r\n    setShowConfirmDelete(!showConfirmDelete);\r\n  };\r\n\r\n  const toggleShowActivity = () => {\r\n    setShowAddActivity(!showAddActivity);\r\n  };\r\n\r\n  return (\r\n    <div className=\"routines\">\r\n      <h2>\r\n        Hello {currentUser.username}, here are your Routines &nbsp;|&nbsp;{\" \"}\r\n        <Button variant=\"primary\" onClick={toggleShowCreateRoutine}>\r\n          Create Routine\r\n        </Button>\r\n        {showCreateRoutine && (\r\n          <CreateRoutine\r\n            handleClose={toggleShowCreateRoutine}\r\n            setMyRoutinesList={setMyRoutinesList}\r\n            myRoutinesList={myRoutinesList}\r\n          />\r\n        )}\r\n      </h2>\r\n\r\n      <p>There is a total of {myRoutinesList.length} routines.</p>\r\n\r\n      {myRoutinesList.map(({ id, name, goal, creatorName, activities }) => (\r\n        <div key={id} className=\"post\">\r\n          <h3>Routine Name: {name} </h3> &nbsp;\r\n          <Button variant=\"primary\" onClick={toggleShowUpdateRoutine}>\r\n            Update Routine\r\n          </Button>\r\n          {showUpdateRoutine && (\r\n            <UpdateRoutine\r\n              handleClose={toggleShowUpdateRoutine}\r\n              setMyRoutinesList={setMyRoutinesList}\r\n              myRoutinesList={myRoutinesList}\r\n              routineId={id}\r\n              name={name}\r\n              goal={goal}\r\n            />\r\n          )}\r\n          &nbsp;|&nbsp;{\" \"}\r\n          <Button variant=\"primary\" onClick={toggleConfirmDelete}>\r\n            Delete\r\n          </Button>\r\n          {showConfirmDelete && (\r\n            <ConfirmDelete\r\n              handleClose={toggleConfirmDelete}\r\n              setMyRoutinesList={setMyRoutinesList}\r\n              myRoutinesList={myRoutinesList}\r\n              routineId={id}\r\n            />\r\n          )}\r\n          <p>Routine Goal: {goal}</p>\r\n          <p>Creator Name: {creatorName}</p>\r\n          {activities.length > 0 ? (\r\n            <>\r\n              &nbsp;\r\n              <Button variant=\"primary\" onClick={toggleConfirmDelete}>\r\n                [+] Activity\r\n              </Button>\r\n              {showAddActivity && (\r\n                <AddActivity handleClose={toggleConfirmDelete} routineId={id} />\r\n              )}\r\n              {activities.map(({ id, name, description, duration, count }) => (\r\n                <div key={id} className=\"activities\">\r\n                  <h3>Routine Activity: {name}</h3>\r\n                  <p>Activity Description: {description}</p>\r\n                  <p>Duration: {duration}</p>\r\n                  <p>Count: {count}</p>\r\n                  &nbsp;|&nbsp;{\" \"}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    key={id}\r\n                    onClick={toggleConfirmDelete}\r\n                  >\r\n                    (-) Activity\r\n                  </Button>\r\n                  &nbsp;|&nbsp;{\" \"}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    key={id}\r\n                    onClick={toggleConfirmDelete}\r\n                  >\r\n                    Update Activity\r\n                  </Button>\r\n                </div>\r\n              ))}{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              &nbsp;\r\n              <Button variant=\"primary\" onClick={toggleShowActivity}>\r\n                [+] Activity\r\n              </Button>\r\n              {showAddActivity && (\r\n                <AddActivity activitiesList={activitiesList} routineId={id} />\r\n              )}{\" \"}\r\n              <p>There are {activities.length} Activities</p>{\" \"}\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRoutines;\r\n","import React from \"react\";\r\nimport \"./Activities.css\";\r\n\r\nconst Activities = ({ activities }) => {\r\n  return (\r\n    <div className=\"activities\">\r\n      <h2>Here are all activities</h2>\r\n      <p>There is a total of {activities.length} activities.</p>\r\n      {activities.map(({ id, name, description }) => (\r\n        <div key={id} className=\"post\">\r\n          <h3>Activity Name: {name}</h3>\r\n          <p>Description: {description}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activities;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Login.css\";\r\nimport { loginUser } from \"../api\";\r\nimport { storeCurrentUser } from \"../auth\";\r\n\r\nconst Login = ({ handleClose, setCurrentUser }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginMessage, setLoginMessage] = useState(null);\r\n\r\n  const messageDiv = loginMessage ? (\r\n    <div className=\"message\">{loginMessage}</div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setLoginMessage(null);\r\n    try {\r\n      const result = await loginUser(username, password);\r\n      if (result.user) {\r\n      handleLogin(result);\r\n      setLoginMessage(result.message);\r\n      }\r\n    } catch (error) {\r\n      setLoginMessage(\"Username or Password Invalid.\");\r\n    }\r\n  }\r\n\r\n  async function handleLogin(result) {\r\n    await storeCurrentUser(result.user);\r\n    await setCurrentUser(result.user);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <span className=\"close-icon\" onClick={handleClose}>\r\n          {\" \"}\r\n          x{\" \"}\r\n        </span>\r\n        <Form.Group size=\"lg\" controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        {messageDiv}\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Register.css\";\r\nimport { registerUser } from \"../api\";\r\nimport { storeCurrentUser } from \"../auth\";\r\n\r\nconst Register = ({ handleClose, setCurrentUser }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [registerMessage, setRegisterMessage] = useState(null);\r\n\r\n  const messageDiv = registerMessage ? (\r\n    <div className=\"message\">{registerMessage}</div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setRegisterMessage(null);\r\n    try {\r\n      const result = await registerUser(username, password);\r\n      storeCurrentUser(result.user);\r\n      setCurrentUser(result.user);\r\n      setRegisterMessage(result.message);\r\n    } catch (error) {\r\n      setRegisterMessage(\r\n        \"Registration unsuccessful. Duplicate Username, please choose another.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <span className=\"close-icon\" onClick={handleClose}>\r\n          {\" \"}\r\n          x{\" \"}\r\n        </span>\r\n        <Form.Group size=\"lg\" controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        {messageDiv}\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          REGISTER\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { clearCurrentUser } from \"../auth\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nconst Header = ({ currentUser, setCurrentUser }) => {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    clearCurrentUser();\r\n    setCurrentUser(\"\");\r\n  };\r\n\r\n  const toggleShowLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  };\r\n\r\n  const toggleShowRegister = () => {\r\n    setShowRegister(!showRegister);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <h1>Fitness Tracker</h1>\r\n      <div className=\"user-select\">\r\n        {currentUser ? (\r\n          <>\r\n            <NavLink to=\"/myroutines\" activeClassName=\"current\">\r\n              My Routines\r\n            </NavLink>\r\n            <NavLink to=\"/routines\" activeClassName=\"current\">\r\n              Routines\r\n            </NavLink>\r\n            <NavLink to=\"/activities\" activeClassName=\"current\">\r\n              Activities\r\n            </NavLink>\r\n            <button\r\n              name=\"logout\"\r\n              type=\"submit\"\r\n              value=\"logout\"\r\n              onClick={handleLogout}\r\n            >\r\n              LOG OUT\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <NavLink to=\"/routines\" activeClassName=\"current\">\r\n              Routines\r\n            </NavLink>\r\n            <NavLink to=\"/activities\" activeClassName=\"current\">\r\n              Activities\r\n            </NavLink>\r\n            <button\r\n              name=\"register\"\r\n              type=\"submit\"\r\n              value=\"register\"\r\n              onClick={toggleShowRegister}\r\n            >\r\n              REGISTER\r\n            </button>\r\n            {showRegister && (\r\n              <Register\r\n                setCurrentUser={setCurrentUser}\r\n                handleClose={toggleShowRegister}\r\n              />\r\n            )}\r\n\r\n            <button\r\n              name=\"login\"\r\n              type=\"button\"\r\n              value=\"login\"\r\n              onClick={toggleShowLogin}\r\n            >\r\n              LOG IN\r\n            </button>\r\n            {showLogin && (\r\n              <Login\r\n                setCurrentUser={setCurrentUser}\r\n                handleClose={toggleShowLogin}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { getCurrentUser } from \"./auth\";\r\n\r\nimport { Header, Routines, MyRoutines, Activities } from \"./components\";\r\n\r\nimport {\r\n  getActivities,\r\n  getAllPublicRoutines,\r\n  getPublicRoutinesByUser,\r\n} from \"./api\";\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(getCurrentUser());\r\n  const [publicRoutines, setPublicRoutines] = useState([]);\r\n  const [myRoutinesList, setMyRoutinesList] = useState([]);\r\n  const [activitiesList, setActivities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      getPublicRoutinesByUser(currentUser.username)\r\n        .then((routines) => {\r\n          setMyRoutinesList(routines);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n\r\n    getAllPublicRoutines()\r\n      .then((routines) => {\r\n        setPublicRoutines(routines);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    getActivities()\r\n      .then((activities) => {\r\n        setActivities(activities);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <Router>\r\n      <div id=\"App\">\r\n        <Header currentUser={currentUser} setCurrentUser={setCurrentUser} />\r\n        {currentUser ? (\r\n          <>\r\n            <Switch>\r\n              <Route path=\"/MyRoutines\">\r\n                <MyRoutines\r\n                  currentUser={currentUser}\r\n                  myRoutinesList={myRoutinesList}\r\n                  setMyRoutinesList={setMyRoutinesList}\r\n                  activitiesList={activitiesList}\r\n                  setActivities={setActivities}\r\n                />\r\n              </Route>\r\n              <Route path=\"/Routines\">\r\n                <Routines routines={publicRoutines} />\r\n              </Route>\r\n              <Route path=\"/activities\">\r\n                <Activities activities={activitiesList} />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <h2 style={{ padding: \".5em\" }}>\r\n                  Welcome, {currentUser.username}\r\n                </h2>\r\n              </Route>\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Switch>\r\n              <Route path=\"/Routines\">\r\n                <Routines routines={publicRoutines} />\r\n              </Route>\r\n              <Route path=\"/activities\">\r\n                <Activities activities={activitiesList} />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <h2 style={{ padding: \".5em\" }}>\r\n                  Please register or log in, above.\r\n                </h2>\r\n              </Route>\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}